#created on: Dec 30, 2019
package sheeprules

// list any import classes here.
import com.model.Model;
import com.model.Question;
import com.model.Shed;
import com.model.Materials;
import com.model.Business;
import com.model.Land;
import com.model.Care;
import com.model.Sheep;

import com.model.Main; 
//import function com.model.Utility.help;

dialect "java"

rule "Enough horsepower tractor"
	when
		$materials : Materials(hasTractor, horsePowerTractor >= 50);
	then
		$materials.setAdvice("Your tractor has enough horsepower to use professionally for any amount of sheep.");
end 

rule "Not enough horsepower tractor"
	when
		$materials : Materials(hasTractor, horsePowerTractor < 50);
		Sheep(totalNSheepWanted >= 100);
	then
		$materials.setAdvice("It is recommended to have a tractor with more than 50 horsepower for working the land. " +
		"Thus you are advised to buy a tractor with more horsepower. Secondhand it will cost you roughly �20.000.");
end

rule "Enough horsepower 100 sheep"
	when
		$materials : Materials(hasTractor, horsePowerTractor < 50);
		Sheep(totalNSheepWanted < 100);
		Business(hobSemiPro == PRO);
	then
		$materials.setAdvice("When you're a professional, it is recommended to have a tractor with more than 50 horsepower " + 
		"for working the land. Since you want to start with fewer than 100 sheep it's okay to have a smaller tractor for now. " +
		"However, above 100 sheep it is recommended to buy a tractor with more horsepower. Secondhand it will cost you roughly �20.000.");
end

rule "No tractor less 10 sheep"
	when
		$materials : Materials(hasTractor == false);
		Sheep($totalNSheepWanted : totalNSheepWanted < 10);
		Business(hobSemiPro == HOBBY);
	then
		$materials.setAdvice("It should be possible to herd " + $totalNSheepWanted + " without owning a tractor, " + 
		"instead a wheelbarrow can be used for almost all tasks.");
end

rule "No tractor between 10and100 sheep"
	when
		$materials : Materials(hasTractor == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 10, totalNSheepWanted <= 100);
	then
		$materials.setAdvice("You should buy a tractor. Since you want to start herding with " + $totalNSheepWanted + 
		" you can get a tractor with less than 50 horsepower. However, when you decide to get more than " +
 		"100 sheep it is recommended to get one with 50 to 70 horsepower.");
end

rule "No tractor, more than 100 sheep"
	when
		$materials : Materials(hasTractor == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 100);
	then
		$materials.setAdvice("You should buy a tractor. Since you want to start herding with " + $totalNSheepWanted + 
		" it is recommended to get one with 50 to 70 horsepower.");
end

rule "All grass materials"
	when
		$materials : Materials(hasMower, hasRaker, hasShaker, hasMestSpreader);
	then
		$materials.setAdvice("You have all the most essential materials for working the grass. Namely, a mower, raker, shaker and mest spreader");
end

rule "Has no shaving machine"
	when
		$materials : Materials(hasShaver == false);
	then
		$materials.setAdvice("You should get a shavig machine when the sheep have worms and the sheep's skin needs cleaning. A shaving machine costs 400.- euros");
end

rule "Grass material missing"
	// Higher salience so that this sentence is printed before the sentences about which one is missing
	salience 2
	when
		$materials : Materials(hasMower == false || hasRaker == false || hasShaker == false || hasMestSpreader == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 10);
	then
		$materials.setAdvice("There are three essential tools for working the grass when you have a lot of sheep; a mower, shaker " + 
		"raker and a mest spreader. For every professional it is recommended to buy them. You don't have all of these.");
end

rule "Mower missing"
	// Lower salience so that this sentence is printed after the sentences about which one is missing
	salience 1
	when
		$materials : Materials(hasMower == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 10);
	then
		$materials.setAdvice("You should get a mower. It costs around 6600.- euros");
end

rule "Shaker missing"
	// Lower salience so that this sentence is printed after the sentences about which one is missing
	salience 1
	when
		$materials : Materials(hasShaker == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 10);
	then
		$materials.setAdvice("You should get a shaker. It costs around 6600.- euros");
end

rule "Raker missing"
	// Lower salience so that this sentence is printed after the sentences about which one is missing
	salience 1
	when
		$materials : Materials(hasRaker == false);
		Sheep($totalNSheepWanted : totalNSheepWanted > 10);
	then
		$materials.setAdvice("You should get a raker. It costs around 6600.- euros");
end

rule "Haypacker missing"
	when
		$materials : Materials(hasHayPacker == false);
	then
		$materials.setAdvice("A haypacker is expensive, so it's alright to not have one. These are better rented or someone " +
		"can be hired to do the haypacking.");
end

rule "Fertilizer spreader missing"
	when
		$materials : Materials(hasFertilizerSpreader == false);
	then
		$materials.setAdvice("A fertilizer spreader can be useful. It costs around 1000.- euros");
end

rule "Mest Gatherer missing"
	when
		$materials : Materials(hasMestGatherer == false);
	then
		$materials.setAdvice("It is nice to have a mest gatherer. The mest from the sheep in the shed can be used as fertilizer " + 
		"on the land. When you don't have a lot of money, you can get by without one.");
end

rule "No tractor no rent"
	when
		$materials : Materials(hasTractor == false);
	then
		$materials.setAdvice("If you do not have tractor renting one is not profitable in the long run, you should really consider buying one");
end
